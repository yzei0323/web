웹8차시

학습목표: 
 
1. 세션저장소를 얻어올 수 있다.
2. 세션저장소에 값을 저장할 수 있다
3. 세션저장소에 값을 꺼내올 수 있다 
4. 세션저장소의 유효범위를 알 수 있다. 
5. 서버측 저장소 request와 session 저장소의 유효범위를 알 수 있다.
6. 웹에서 세션(세션  =>저장소 임)을 어떤 경우에  사용하는지를 경험한다. 
 
 

"HTTP 프로토콜의 통신방식은 
요청이 있을 때 마다 연결하고 
응답을 보내는 즉시 연결이 끊어진다
클라이언트와 서버 간에 연결상태가 유지되지 않는 통신 방식을 무상태라고 한다"
######################
세션다루기
######################
세션을 이용한 로그인/로그아웃
세션을 이용한 장바구니
세션을 이용한 설문하기


##################################################################
서버측 저장소 : request, session, servletContext 

request저장소 : MVC 패턴에서 model을 저장하는 저장소이다
request, response는 매 요청마다 다시 만들어지는 객체이다
하나의 요청이 응답될때 까지 공유할 데이터값들을 저장하는 저장소로  request를 사용한다
servletContext  :  하나의 웹프로젝트가 공유해야 하는 데이터값들을 저장하는 저장소 - 환경설정 정보
###################################################################


######################################################################
하나의 사용자는 여러번 요청을 한다.  주문페이지, 로그인페이지, 게시판페이지 등등.. 
하나의 사용자가 공유해야하는 데이터를 저장하는 서버측 저장소가 세션이다
#######################################################################

3가지 예제로 세션을 어떻게 사용하는지 학습한다.
############################################
서버측은 어떻게 같은 사용자라고 알수있는가?
############################################
서버에 처음 접속시 세션아이디를 사용자측 컴퓨터로 제공한다.  그리고 이 값은 사용자측 컴퓨터에 저장된다(쿠키라고 함)
다음 접속시 세션아이디이 자동으로 같이 서버측에 전달된다.
세션아이디에 해당하는 저장소에 저장해 둔 값이 있으면 해당저장소에서 값을 꺼내 필요한 작업들을 할 수 있다. 

 


세션저장소 얻기   => HttpSession session = request.getSession();
setAttribute      저장하기
getAttribute     얻어오기


세션종료하기
session.invalidate();	



<<서버측 저장소 >> 
  request
  session
  (servletContext)  application    : 모든 사용자가 사용하는 저장소 , 모든 사용자가 공유해야 하는데이터가 저장되는 곳, 환경설정,(데이터베이스 연결정보 같은것)
  pageContext  : jsp에서만 존재하는 저장소  (el때 학습 함)


##########################
오후실습 
########################## 
세션을 활용한 예제 만들기
2인 1조 작업으로 진행함  , 세션적용 예제 제출하기 2인1조
오전 login세션 프로젝트에 MemberDAO 작성하여 실제 로그인 성공하기 (선택)

 


 
